{"version":3,"file":"static/js/762.4e7158f8.chunk.js","mappings":"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","sources":["webpack://react-test-task/./src/components/ProductObject/ProductObject.module.scss?fcd3","redux/object-reducer/object-selectors.ts","webpack://react-test-task/./src/components/simples/PhotoSlider/PhotoSlider.module.scss?a517","components/simples/PhotoSlider/PhotoSlider.tsx","components/ProductObject/ProductObject.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"productObjectSection\":\"ProductObject_productObjectSection__Tohpq\",\"productObjectChanger\":\"ProductObject_productObjectChanger__tleNL\"};","import {createSelector} from 'reselect'\r\nimport {AppStateType} from \"../store\"\r\n\r\nconst getObjectSelector = (state: AppStateType) => {\r\n\treturn state.productObject.product\r\n}\r\nexport const getObjectProduct = createSelector(getObjectSelector, (product) => product)\r\n\r\nconst getSizeSelectSelector = (state: AppStateType) => {\r\n\treturn state.productObject.sizeSelect\r\n}\r\nexport const getSizeSelect = createSelector(getSizeSelectSelector, (sizeSelect) => sizeSelect)\r\n\r\n\r\nconst getObjectInitializedSelector = (state: AppStateType) => {\r\n\treturn state.productObject.initialized\r\n}\r\nexport const getObjectInitialized = createSelector(getObjectInitializedSelector, (initialized) => initialized)\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"sliderBlock\":\"PhotoSlider_sliderBlock__6MSJi\",\"btn_prev\":\"PhotoSlider_btn_prev__sq9vP\",\"btn_next\":\"PhotoSlider_btn_next__SsSMp\",\"imageBlock\":\"PhotoSlider_imageBlock__D8OGM\"};","import React, {useState} from \"react\"\r\nimport styles from \"./PhotoSlider.module.scss\"\r\n\r\ninterface PropsType {\r\n\timages: Array<any>\r\n}\r\n\r\nexport const PhotoSlider: React.FC<PropsType> = ({images}) => {\r\n\r\n\tconst translateStep = 250\r\n\tconst [sliderTranslate, setSliderTranslate] = useState(0)\r\n\tconst [sliderCounter, setSliderCounter] = useState(1)\r\n\r\n\tconst onSliderPlus = () => {\r\n\t\tif (sliderTranslate >= ((images.length - 1) * translateStep)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetSliderTranslate(sliderTranslate + translateStep)\r\n\t\tsetSliderCounter(sliderCounter + 1)\r\n\t};\r\n\r\n\tconst onSliderMinus = () => {\r\n\t\tif (sliderTranslate === 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetSliderTranslate(sliderTranslate - translateStep)\r\n\t\tsetSliderCounter(sliderCounter - 1)\r\n\t};\r\n\r\n\r\n\treturn (\r\n\t\t<div className={styles.sliderBlock}>\r\n\t\t\t<button className={styles.btn_prev} onClick={onSliderMinus}>Назад</button>\r\n\t\t\t<button className={styles.btn_next} onClick={onSliderPlus}>Вперёд</button>\r\n\t\t\t<div className={styles.imageBlock} style={{transform: `translateX(${-sliderTranslate}px)`}}>\r\n\t\t\t\t{\r\n\t\t\t\t\timages.map((image) => <img key={image} src={image} alt=\"\"/>)\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default React.memo(PhotoSlider)","import React, {useEffect, useState} from \"react\"\r\nimport {useSearchParams} from \"react-router-dom\"\r\nimport styles from \"./ProductObject.module.scss\"\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\nimport {actions, initialProductObjectTC} from \"../../redux/object-reducer/object-reducer\"\r\nimport {getObjectInitialized, getObjectProduct, getSizeSelect} from \"../../redux/object-reducer/object-selectors\"\r\nimport LoadingSpinner from \"../spinners/LoadingSpinner/LoadingSpinner\"\r\nimport {setProductCardTC} from \"../../redux/card-reducer/card-reducer\"\r\nimport PhotoSlider from \"../simples/PhotoSlider/PhotoSlider\";\r\n\r\nexport const ProductObject: React.FC = () => {\r\n\tconst dispatch = useDispatch<any>()\r\n\tconst [searchParams] = useSearchParams()\r\n\r\n\tconst [colors, setColors] = useState()\r\n\tconst [sizes, setSizes] = useState()\r\n\tconst [currentColor, setCurrentColor] = useState<number>()\r\n\tconst [currentColorIndex, setCurrentColorIndex] = useState<number>(0)\r\n\tconst [currentSize, setCurrentSize] = useState()\r\n\r\n\tconst productObject = useSelector(getObjectProduct)\r\n\tconst sizeSelect = useSelector(getSizeSelect)\r\n\r\n\tconst initialPage = useSelector(getObjectInitialized)\r\n\r\n\tuseEffect(() => {\r\n\t\tconst idParam = Number(searchParams.get('id'))\r\n\r\n\t\tdispatch(initialProductObjectTC(idParam))\r\n\r\n\t\treturn () => dispatch(actions.clearProductObject())\r\n\t}, [])\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst colorsFromProducts = productObject?.colors.map((color) => ({id: color.id, name: color.name}))\r\n\t\tconst indexColorFind = productObject?.colors?.findIndex((color) => color.id == currentColor);\r\n\r\n\t\tsetColors(colorsFromProducts)\r\n\t\tsetCurrentColorIndex(indexColorFind)\r\n\r\n\t\tcolorsFromProducts && setCurrentColor(colorsFromProducts[0]?.id)\r\n\r\n\t\treturn () => {\r\n\t\t\tsetColors(null)\r\n\t\t}\r\n\t}, [productObject, sizeSelect])\r\n\r\n\tuseEffect(() => {\r\n\t\tconst indexColorFind = productObject?.colors?.findIndex((color) => color.id == currentColor);\r\n\t\tconst sizesFromProducts = sizeSelect?.filter((size) => productObject?.colors[currentColorIndex]?.sizes.includes(size.id));\r\n\r\n\t\tsetSizes(sizesFromProducts)\r\n\t\tsizesFromProducts && setCurrentSize(sizesFromProducts[0]?.id);\r\n\t\tsetCurrentColorIndex(indexColorFind)\r\n\r\n\t\treturn () => {\r\n\t\t\tsetSizes(null)\r\n\t\t}\r\n\t}, [currentColor, productObject, sizeSelect, currentColorIndex])\r\n\r\n\r\n\tconst handleColorChange = (evt) => {\r\n\t\tsetCurrentColor(evt.target.value)\r\n\t}\r\n\r\n\tconst handleSizeChange = (evt) => {\r\n\t\tsetCurrentSize(evt.target.value)\r\n\t}\r\n\r\n\tconst setToCard = () => {\r\n\t\tdispatch(setProductCardTC(productObject.id, colors[currentColorIndex].id, currentSize))\r\n\t}\r\n\r\n\treturn (\r\n\t\t!initialPage ?\r\n\t\t\t<LoadingSpinner/>\r\n\r\n\t\t\t:\r\n\r\n\t\t\t<section className={styles.productObjectSection}>\r\n\r\n\t\t\t\t{\r\n\t\t\t\t\tproductObject?.colors[currentColorIndex]?.images\r\n\t\t\t\t\t&&\r\n\t\t\t\t\t<PhotoSlider images={productObject.colors[currentColorIndex].images}/>\r\n\t\t\t\t}\r\n\r\n\t\t\t\t<div className={styles.productObjectChanger}>\r\n\t\t\t\t\t<label>Цвет:\r\n\t\t\t\t\t\t<select name=\"color\" value={currentColor} onChange={handleColorChange}>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tcolors?.map((color) => <option key={color.id} value={color.id}>{color.name}</option>)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t</label>\r\n\r\n\t\t\t\t\t<label>Размер:\r\n\t\t\t\t\t\t<select name=\"size\" value={currentSize} onChange={handleSizeChange}>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tsizes?.map((select) => <option key={select.id} value={select.id}>{select.label}</option>)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t</label>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<button onClick={setToCard}>В корзину</button>\r\n\t\t\t\t</div>\r\n\r\n\r\n\t\t\t</section>\r\n\t)\r\n}\r\n\r\nexport default ProductObject"],"names":["getObjectProduct","createSelector","state","productObject","product","getSizeSelect","sizeSelect","getObjectInitialized","initialized","PhotoSlider","images","useState","sliderTranslate","setSliderTranslate","sliderCounter","setSliderCounter","className","styles","onClick","length","style","transform","map","image","src","alt","React","ProductObject","dispatch","useDispatch","useSearchParams","searchParams","colors","setColors","sizes","setSizes","currentColor","setCurrentColor","currentColorIndex","setCurrentColorIndex","currentSize","setCurrentSize","useSelector","initialPage","useEffect","idParam","Number","get","initialProductObjectTC","actions","colorsFromProducts","color","id","name","indexColorFind","findIndex","sizesFromProducts","filter","size","includes","value","onChange","evt","target","select","label","setProductCardTC","LoadingSpinner"],"sourceRoot":""}